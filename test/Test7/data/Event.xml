<cuina.data.DataTable serialization="custom">
  <unserializable-parents/>
  <map>
    <default>
      <loadFactor>0.75</loadFactor>
      <threshold>12</threshold>
    </default>
    <int>16</int>
    <int>12</int>
    <string>Gegner_Treffer</string>
    <cuina.data.Event>
      <key>Gegner_Treffer</key>
      <name>Gegner_Treffer</name>
      <code>Map.remove_object(this)&#xd;
$healthbar.minus(20)&#xd;
if other != nil and $healthbar.getValue &lt;= 0&#xd;
	Map.remove_object(other)&#xd;
	$player = nil&#xd;
end&#xd;
</code>
      <parallel>true</parallel>
      <directStart>true</directStart>
      <preload>false</preload>
    </cuina.data.Event>
    <string>Rakete_Update</string>
    <cuina.data.Event>
      <key>Rakete_Update</key>
      <name>Rakete_Update</name>
      <code>@full = 150 if @full == nil
if @full &gt; 0
	@full -= 1
	this.getMotor.turn($player, 1.15)
	if FrameTimer.getFrameCount() % 3 == 0
		$cloud_emitter.setRegion(this.getX, this.getY, 1, 1)
		$cloud_emitter.createBurst(1)
	end
end
</code>
      <parallel>true</parallel>
      <directStart>true</directStart>
      <preload>false</preload>
    </cuina.data.Event>
    <string>Gegner_Spawn</string>
    <cuina.data.Event>
      <key>Gegner_Spawn</key>
      <name>Gegner_Spawn</name>
      <code>if $gegner_delay != nil and $gegner_delay &gt; 0&#xd;
	$gegner_delay -= 1&#xd;
	return&#xd;
end&#xd;
$gegner_delay = 100&#xd;
&#xd;
builder = ObjectBuilder.new()&#xd;
builder.setName(&quot;Gegner&quot;).setMotor(Motor::MOVE_FORWARD, 48, 270).setStartPoint(rand(600) + 20, 16, 0)&#xd;
if (rand(10) &gt; 8)&#xd;
	builder.addTrigger(TriggerType::ON_CREATE, -1, &quot;Gegner_Aktion3&quot;)&#xd;
	builder.setModel(&quot;Stealth.png&quot;, 1, 1, 2)&#xd;
	builder.setFlags(false, true)&#xd;
elsif (rand(10) &gt; 5)&#xd;
	builder.addTrigger(TriggerType::ON_CREATE, -1, &quot;Gegner_Aktion2&quot;)&#xd;
	builder.setModel(&quot;kleiner Jaeger2.png&quot;, 1)&#xd;
else&#xd;
	builder.addTrigger(TriggerType::ON_CREATE, -1, &quot;Gegner_Aktion&quot;)&#xd;
	builder.setModel(&quot;Gleiter.png&quot;, 1)&#xd;
end&#xd;
builder.setMask(1, true).build</code>
      <parallel>true</parallel>
      <directStart>true</directStart>
      <preload>false</preload>
    </cuina.data.Event>
    <string>Schussdelay</string>
    <cuina.data.Event>
      <key>Schussdelay</key>
      <name>Schussdelay</name>
      <code>$healthbar.plus(0.05)&#xd;
if $shot_delay != nil and $shot_delay &gt; 0&#xd;
	$shot_delay -= 1&#xd;
end</code>
      <parallel>true</parallel>
      <directStart>true</directStart>
      <preload>false</preload>
    </cuina.data.Event>
    <string>Gegner_Aktion2</string>
    <cuina.data.Event>
      <key>Gegner_Aktion2</key>
      <name>Gegner_Aktion2</name>
      <code>wait_frames(rand(200))&#xd;
puts &quot;Gegner-Aktion. 2&quot;&#xd;
while this.exist and $player != nil&#xd;
	builder = ObjectBuilder.new&#xd;
	builder.addTrigger(TriggerType::OBJECT_TOUCH, 100001, &quot;Gegner_Treffer&quot;)&#xd;
	builder.addTrigger(TriggerType::SCENE_UPDATE, -1, &quot;Rakete_Update&quot;)&#xd;
	builder.useAngle(true)&#xd;
	builder.setModel(&quot;Rakete.png&quot;, 1, 2, 1).setModelOffset(5, 3)&#xd;
	builder.setMotor(Motor::MOVE_FORWARD, 64, 270).setMask(0, true).setStartPoint(this).build&#xd;
	wait_frames(rand(250))&#xd;
end&#xd;
</code>
      <parallel>true</parallel>
      <directStart>false</directStart>
      <preload>false</preload>
    </cuina.data.Event>
    <string>init_Game</string>
    <cuina.data.Event>
      <key>init_Game</key>
      <name>init_Game</name>
      <code>include_class &quot;cuina.hud.HealthBar&quot;
include_class &quot;cuina.hud.ValueDisplay&quot;
include_class &quot;cuina.FrameTimer&quot;
include_class &quot;cuina.graphics.Panorama&quot;
include_class &quot;cuina.graphics.Graphics&quot;
include_class &quot;cuina.particle.NewtonPhysik&quot;
Map.load_map(1)
Map.get_panorama(1).setSpeedY(2)

p = Panorama.new(&quot;BlueClouds.png&quot;)
p.setOffset(128, 128)
p.setZoomX(2)
p.setZoomY(2)
p.setAlpha(0.4)
p.setSpeedY(2)
Map.set_panorama(2, p)

p = Panorama.new(&quot;RedClouds.png&quot;)
p.setOffset(192, 64)
p.setZoomX(1.5)
p.setZoomY(1.5)
p.setAlpha(0.6)
p.setSpeedY(4)
p.setSpeedX(1)
Map.set_panorama(3, p)

p = Panorama.new(&quot;BlueClouds.png&quot;, Graphics.GraphicManager)
p.setDepth(500)
p.setAlpha(0.8)
p.setSpeedY(6)
p.setSpeedX(1)
Map.set_panorama(4, p)

$player = Map.get_object(100001)
# Statische Partikel
$partSystem = ParticleSystem.new(24);
# Dynamische Partikel
$partSystem2 = ParticleSystem.new(500);

$pt1 = ParticleType.new;
$pt1.setImage(&quot;Spark.png&quot;);
$pt1.setSize(0.1, 0.2);
$pt1.setLifeTime(10, 20);
$pt1.setDirection(0, 360);
$pt1.setSpeed(0.1, 1);

$pt2 = ParticleType.new;
$pt2.setImage(&quot;Grey_Cloud.png&quot;);
$pt2.setSize(0.25, 0.75);
$pt2.setLifeTime(15, 30);
$pt2.setDirection(0, 360);
$pt2.setSpeed(0, 0.5);
$pt2.setDrawMode(1)

$spark_emitter = Emitter.new($partSystem2, $pt1, NewtonPhysik.new(nil))
$cloud_emitter = Emitter.new($partSystem2, $pt2, NewtonPhysik.new(nil))

type2 = ParticleType.new;
type2.setImage(&quot;Partikel.png&quot;);
type2.setSize(0.1, 0.1);
type2.setLifeTime(-1, -1);

ring = RingAnimation.new($partSystem, type2);
ring.createRing($player.pos, 12, 34, 2);
ring.createRing($player.pos, 12, 34, -2);

set_player($player)
# 8-Richtungen erlauben
Player.INPUT_8 = true
$healthbar = HealthBar.new(10, 10, 100, 20)
$score = ValueDisplay.new(536, 10, 1, &quot;Score: &quot;)
play_bgm(0, &quot;back.mp3&quot;)
</code>
      <parallel>false</parallel>
      <directStart>true</directStart>
      <preload>false</preload>
    </cuina.data.Event>
    <string>Schuss</string>
    <cuina.data.Event>
      <key>Schuss</key>
      <name>Schuss</name>
      <code>if $shot_delay != nil and $shot_delay &gt; 0
    return
end
$shot_delay = 20
play_snd(&quot;piuup1.wav&quot;, 50)
builder = ObjectBuilder.new(&quot;Laser&quot;)
builder.addTrigger(TriggerType::OBJECT_TOUCH, -1, &quot;Treffer&quot;).setStartPoint($player, -16, 0, 0).build
builder.cloneObject().setStartPoint($player, 16, 0, 0).build
</code>
      <parallel>false</parallel>
      <directStart>true</directStart>
      <preload>false</preload>
    </cuina.data.Event>
    <string>Gegner_Aktion3</string>
    <cuina.data.Event>
      <key>Gegner_Aktion3</key>
      <name>Gegner_Aktion3</name>
      <code>wait_frames(60 + rand(60))&#xd;
puts &quot;Gegner-Aktion. 3&quot;&#xd;
while this.exist and $player != nil&#xd;
	this.getModel.setAnimationIndex(1)&#xd;
	play_snd(&quot;elektro.wav&quot;, 50)&#xd;
	wait_frames(rand(20))&#xd;
	builder = ObjectBuilder.new&#xd;
	builder.addTrigger(TriggerType::OBJECT_TOUCH, 100001, &quot;Gegner_Treffer&quot;)&#xd;
	#builder.addTrigger(TriggerType::SCENE_UPDATE, -1, &quot;Rakete_Update&quot;)&#xd;
	builder.useAngle(true)&#xd;
	builder.setModel(&quot;Green_Laser.png&quot;, 1).setModelOffset(1, 5).setMask(0, true)&#xd;
	builder.setStartPoint(this).setMotor(Motor::MOVE_FORWARD, 120, $player).build&#xd;
	wait_frames(rand(80))&#xd;
end&#xd;
</code>
      <parallel>true</parallel>
      <directStart>false</directStart>
      <preload>false</preload>
    </cuina.data.Event>
    <string>Delete_Self</string>
    <cuina.data.Event>
      <key>Delete_Self</key>
      <name>Delete_Self</name>
      <code>Map.remove_object(this)</code>
      <parallel>false</parallel>
      <directStart>true</directStart>
      <preload>false</preload>
    </cuina.data.Event>
    <string>Gegner_Aktion</string>
    <cuina.data.Event>
      <key>Gegner_Aktion</key>
      <name>Gegner_Aktion</name>
      <code>wait_frames(20 + rand(100))
puts &quot;Gegner-Aktion.&quot;
while this.exist and $player != nil
	builder = ObjectBuilder.new
	builder.addTrigger(TriggerType::OBJECT_TOUCH, 100001, &quot;Gegner_Treffer&quot;)
	builder.addTrigger(TriggerType::SCENE_UPDATE, -1, &quot;Feuerkugel_Update&quot;)
	builder.setModel(&quot;Feuerkugel.png&quot;, 1).setMask(0, true)
	builder.setStartPoint(this).setMotor(Motor::MOVE_FORWARD, 108, $player).build
	wait_frames(30)
	return if not this.exist
	builder = ObjectBuilder.new
	builder.addTrigger(TriggerType::OBJECT_TOUCH, 100001, &quot;Gegner_Treffer&quot;)
	builder.addTrigger(TriggerType::SCENE_UPDATE, -1, &quot;Feuerkugel_Update&quot;)
	builder.setModel(&quot;Feuerkugel.png&quot;, 1).setMask(0, true)
	builder.setStartPoint(this).setMotor(Motor::MOVE_FORWARD, 108, $player).build
	wait_frames(30 + rand(100))
end
</code>
      <parallel>true</parallel>
      <directStart>false</directStart>
      <preload>false</preload>
    </cuina.data.Event>
    <string>Treffer</string>
    <cuina.data.Event>
      <key>Treffer</key>
      <name>Treffer</name>
      <code>if other != nil and other.name == &quot;Gegner&quot;&#xd;
	Map.remove_object(other)&#xd;
	Map.remove_object(this)&#xd;
	builder = ObjectBuilder.new(&quot;Explosion&quot;)&#xd;
	builder.setAnimation(0, 4, &quot;Delete_Self&quot;)&#xd;
	builder.setStartPoint(other).build&#xd;
	$variables[1] += 5&#xd;
	play_snd(&quot;Bumm.wav&quot;, 70)
end</code>
      <parallel>false</parallel>
      <directStart>true</directStart>
      <preload>false</preload>
    </cuina.data.Event>
    <string>Feuerkugel_Update</string>
    <cuina.data.Event>
      <key>Feuerkugel_Update</key>
      <name>Feuerkugel_Update</name>
      <code>$spark_emitter.setRegion(this.getX, this.getY, 1, 1)&#xd;
$spark_emitter.createBurst(1)</code>
      <parallel>true</parallel>
      <directStart>true</directStart>
      <preload>false</preload>
    </cuina.data.Event>
  </map>
  <cuina.data.DataTable>
    <default>
      <clazz>cuina.data.Event</clazz>
      <name>Event</name>
      <treeOrder/>
    </default>
  </cuina.data.DataTable>
</cuina.data.DataTable>